# Generated by Django 5.1.3 on 2024-11-28 23:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categoria',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CicloSiembra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, verbose_name='Ciclo de Siembra')),
            ],
            options={
                'verbose_name': 'Ciclo de Siembra',
                'verbose_name_plural': 'Ciclos de Siembra',
                'db_table': 'ciclo_siembra',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ClimaPlanta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, verbose_name='Clima de la Planta')),
            ],
            options={
                'verbose_name': 'Clima de la Planta',
                'verbose_name_plural': 'Climas de Plantas',
                'db_table': 'clima_planta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Localidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, verbose_name='Localidad')),
            ],
            options={
                'verbose_name': 'Localidad',
                'verbose_name_plural': 'Localidades',
                'db_table': 'localidad',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TipoPlanta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, verbose_name='Tipo de Planta')),
            ],
            options={
                'verbose_name': 'Tipo de Planta',
                'verbose_name_plural': 'Tipos de Planta',
                'db_table': 'tipo_planta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biografía')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comunidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_de_usuario', models.CharField(max_length=30, verbose_name='Nombre de Usuario')),
                ('fecha_publicacion', models.DateField(verbose_name='Fecha de Publicación')),
                ('comentarios', models.CharField(max_length=30, verbose_name='Comentarios')),
                ('CustomUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Comunidad',
                'verbose_name_plural': 'Comunidades',
                'db_table': 'comunidad',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Catalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_elemento', models.CharField(max_length=30, verbose_name='Nombre del Elemento')),
                ('ubicacion', models.CharField(max_length=20, verbose_name='Ubicación')),
                ('tipos_cuidado', models.CharField(max_length=15, verbose_name='Tipos de Cuidado')),
                ('requisitos_riego', models.CharField(max_length=30, verbose_name='Requisitos de Riego')),
                ('Categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.categoria', verbose_name='Categorias')),
                ('CicloSiembra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.ciclosiembra', verbose_name='CicloSeimbras')),
                ('ClimaPlanta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.climaplanta', verbose_name='CimaPlantas')),
                ('TipoPlanta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.tipoplanta', verbose_name='TiposPlantas')),
            ],
            options={
                'verbose_name': 'Catálogo',
                'verbose_name_plural': 'Catálogos',
                'db_table': 'catalogo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Viveros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_vivero', models.CharField(max_length=30, verbose_name='Nombre del Vivero')),
                ('barrio', models.CharField(max_length=30, verbose_name='Barrio')),
                ('direccion_vivero', models.CharField(max_length=30, verbose_name='Dirección del Vivero')),
                ('numero_contacto', models.CharField(max_length=10, verbose_name='Número de Contacto')),
                ('localidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.localidad', verbose_name='Localidad')),
            ],
            options={
                'verbose_name': 'Vivero',
                'verbose_name_plural': 'Viveros',
                'db_table': 'viveros',
                'ordering': ['id'],
            },
        ),
    ]